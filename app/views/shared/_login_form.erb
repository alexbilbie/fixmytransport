<%- form_for (@user_session ||= UserSession.new), :url => user_sessions_path, :html => {:id => 'login-form' } do |f|  %>
  <%- if @user_session.errors.on_base %>
    <div class='error', id="error-base">
      <%= error_message_on @user_session, :base %>
    </div>
  <%- else %>
    <div class='error', id="error-base" style="display: none;"></div>
  <%- end %>
  <div class='notice' id='notice-base' style="display: none;"></div>
<ul>
	<li class="login-username">
	  <%- if @user_session.errors.on('email') %>
      <div class='error' id="error-email">
        <%= error_message_on @user_session, :email %>
      </div>
      <%- else %>
        <div class='error', id="error-email" style="display: none;"></div>
    <%- end %>
		<label for="user_session_email">Email</label>
		<input name="user_session[email]" id="user_session_email" type="text" />
	</li>
	<li class="login-password">
	  <%- if @user_session.errors.on('password') %>
      <div class='error' id='error-password'>
        <%= error_message_on @user_session, :password %>
      </div>
    <%- else %>
      <div class='error', id="error-password" style="display: none;"></div>
    <%- end %>
		<label for="user_session_password">Password</label>
		<input name="user_session[password]" id="user_session_password" type="password" />
		<a href="<%= new_password_reset_path %>">Forgot?</a>
	</li>
	<li>
		<button>Sign In</button>
		<label for="user_session_remember_me">Keep me signed in</label><input type="checkbox" id="user_session_remember_me" name="user_session[remember_me]" value="1">    
		<input type=hidden name="redirect" value="<%= request.request_uri %>">
		<p>Don't have an account? <a href="<%= new_account_url %>" id="create-account">Create one</a>.</p>
	</li>
</ul>
<%- end %>

<%- if ! MySociety::Config.get('FACEBOOK_APP_ID','').empty? %>

<div class="login-options">
	<p>Or use an existing account</p>

	<a href="#" onclick="checkLoginOrCallFacebook()" id="facebook" class="facebook">Facebook Connect</a>

	<!-- <a href="#" id="twitter" class="twitter">Twitter Connect</a> -->
</div>
<div id="fb-root"></div>

<script>
    var fmt_Facebook_appId = '<%= MySociety::Config.get('FACEBOOK_APP_ID','') %>'; 
    var fmtPopup = undefined;
    var fmtPopupName = 'fmtfblogin';
    var fmtPopupParams =  'width=580,height=400,location=no,menubar=no,toolbar=no,scrollbars:auto';
    var fbButtonState = 'idle'; // idle, busy or blocked (if it seems popup was denied)
    var url = '';
    
    function debugAlert(msg){
        console.log(msg)
    }
        
    function checkLoginOrCallFacebook(){
        if (fbButtonState == 'idle'){
            fbButtonState = 'busy'; 
            $(".facebook").css('background-repeat', 'repeat-y');
            $(".facebook").css('background-position', '0px -50px');
            FB.getLoginStatus(function(response) {
                debugAlert("'ajax' response back now, fbButtonState=" + fbButtonState);
                if (response.session && response.status && response.status == 'connected') { // fb says: logged in
                    var authParams = { 'access_token' : response.session.access_token, 
                                        'token_expiry' : response.session.expires,
                                        'source' : 'facebook'}
                    if (fmtPopup){fmtPopup.close()};
                    window.externalAuth(authParams);
                } else {
                    var path = 'https://www.facebook.com/dialog/oauth?';
                    var redirectUri = document.location.protocol + '//' + document.location.host + '/facebook_callback.html';
                    debugAlert("redirectUri = " + redirectUri);
                    var queryParams = ['client_id=' + fmt_Facebook_appId,
                        'redirect_uri=' + redirectUri,
                        'scope=email',
                        'display=popup',
                        'response_type=token'];
                    url = path + queryParams.join('&');                    
                    debugAlert("inner open, fbButtonState=" + fbButtonState);
                    fmtPopup = window.open(url, fmtPopupName, fmtPopupParams);
                    // Can't usefull detect blocked popups on current Chrome: let the browser notify the user. Barely satisfactory.
                    if (!fmtPopup || fmtPopup.closed || typeof fmtPopup.closed=='undefined'){
                        fbButtonState = 'blocked';
                        $(".facebook").css('background-position', '0px -100px'); 
                        debugAlert("was blocked, dropping out, fbButtonState=" + fbButtonState);
                    } else {
                        debugAlert("was not blocked, inner open worked OK, will now set to idle and focus the popup");
                        fbButtonState = 'idle';
                        $(".facebook").css('background-position', '0px 0px'); 
                        debugAlert("finishing up, fmtPopup.focus(), fbButtonState=" + fbButtonState);
                        fmtPopup.focus();                        
                    }
                }
            });
        } else if (fbButtonState == 'blocked') {
            if (url){
                fmtPopup = window.open(url, fmtPopupName, fmtPopupParams);  
            } else {
                // something goofy with the URL means it wasn't going to work anyway :-|
            }
            fbButtonState = 'idle';
        }
        if (fbButtonState == 'idle') {
            $(".facebook").css('background-position', '0px 0px'); 
        }
        return false;
    }

    window.fbAsyncInit = function() {
        FB.init({appId: fmt_Facebook_appId, status: false, cookie: true, xfbml: false});      
    };
    (function() {
        var e = document.createElement('script'); e.async = true;
        // e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';
        e.src = '/javascripts/facebook_all.js';
        document.getElementById('fb-root').appendChild(e);
    }());
          
</script>
<%- end %>


